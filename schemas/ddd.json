{
  "of://log_process_state.json": {
    "version": "0.1",
    "title": "Process state",
    "type": "object",
    "properties": {
      "schemaRef": {
        "format": "ui",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "processId": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9b714fa-9f9f-4bd0-9500-3638ba2154e2",
        "type": "string",
        "description": "The object _id of the process, an object id."
      },
      "reason": {
        "description": "The reason for the state change.",
        "propertyId": "787d9699-84ad-49c7-9295-d76fca8ec7c6",
        "type": "string"
      },
      "changedWhen": {
        "format": "date-time",
        "description": "The time the state changed",
        "propertyId": "61e951e2-d2e7-424a-a0d0-debaccd21db9",
        "type": "string"
      },
      "changedBy": {
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "55e937b7-9e58-49ad-9b42-c6557ca23d0a",
        "refSchemaRef": "mbe://user.json",
        "type": "string",
        "description": "The user that initiated the state change.",
        "isObjectId": "true"
      },
      "state": {
        "description": "The state of the process",
        "type": "string",
        "propertyId": "6238a22d-f834-41e3-99e3-b8d72bcf2666",
        "enum": [
          "queued",
          "running",
          "paused",
          "stopped",
          "killed",
          "failed",
          "finished"
        ]
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "of",
    "required": [
      "processId",
      "state",
      "changedWhen",
      "changedBy",
      "schemaRef"
    ],
    "description": "Process state log packet",
    "collection": "log"
  },
  "bpm://bpm_process_parameters.json": {
    "version": "0.1",
    "title": "BPM Process definition",
    "schemaRef": "e76afc2a-7159-48e4-a1ec-26a8af33c707",
    "type": "object",
    "properties": {
      "pipPackages": {
        "description": "A list of pip packages dependencies names",
        "items": {
          "type": "string"
        },
        "propertyId": "7287e9cb-ec66-45a5-abfb-3e011619f896",
        "type": "array"
      },
      "entryPoint": {
        "properties": {
          "moduleName": {
            "description": "The name of the module",
            "propertyId": "a8760bb1-f5c8-4426-9e43-e5e11a070981",
            "type": "string"
          },
          "functionName": {
            "description": "The name of the function to call",
            "propertyId": "a8760bb1-f5c8-4426-9e43-e5e11a070981",
            "type": "string"
          }
        },
        "description": "The process should start by using this.",
        "type": "object"
      },
      "globals": {
        "properties": {},
        "additionalProperties": true,
        "description": "The global variables that is provided as input to the process",
        "propertyId": "90c836ee-d154-47f4-832c-6e767cbc1883",
        "type": "object"
      },
      "runAs": {
        "description": "The user to run the process as",
        "propertyId": "0fe69651-b912-4bd9-89ae-d1020b21fef9",
        "type": "string"
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "bpm",
    "description": "A BPM Process definition",
    "collection": ""
  },
  "bpm://message_agent_control.json": {
    "properties": {
      "sourceProcessId": {
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "description": "A reference to the processId of the source.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "command": {
        "description": "The command.",
        "type": "string",
        "propertyId": "780acb41-20b3-4641-994a-c2354b062fe5",
        "enum": [
          "stop",
          "restart"
        ]
      },
      "destination": {
        "description": "The destination adress",
        "propertyId": "484808c0-d8f2-4d58-973b-777e445b1ebd",
        "type": "string"
      },
      "source": {
        "description": "The source address",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "string"
      },
      "messageId": {
        "description": "An Id to help the sender identify a response",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "number"
      },
      "reason": {
        "description": "The reason for sending the command.",
        "propertyId": "787d9699-84ad-49c7-9295-d76fca8ec7c6",
        "type": "string"
      },
      "destinationProcessId": {
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "description": "A reference to the processId of the destination.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "userId": {
        "propertyId": "1ea887ea-8de8-4cc1-9101-d912bd4816b0",
        "description": "The user sending the message.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      }
    },
    "title": "BPM Agent Control",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "bpm",
    "required": [
      "command"
    ],
    "description": "BPM Agent control message",
    "collection": "log"
  },
  "mbe://user.json": {
    "properties": {
      "allowedChildTypes": {
        "description": "A list of the allowed types of children.",
        "items": {
          "format": "uri",
          "propertyId": "9161503f-a3fe-4b7e-8c0a-8553bd3f8043",
          "type": "string"
        },
        "type": "array"
      },
      "schemaRef": {
        "format": "uri",
        "description": "The schema ref of the node schema, a URI.",
        "propertyId": "e7b166f5-4bf0-4b8c-9a60-601030daa04b",
        "type": "string"
      },
      "name": {
        "description": "The friendly short name of the node.",
        "propertyId": "9ce4a360-53fe-4c02-b894-c5b1787cf835",
        "type": "string"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9487ec8-dfce-440a-a5d5-e65e89bc84aa",
        "type": "string",
        "description": "The objectId of the node."
      },
      "groups": {
        "description": "The groups this user belongs to.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "17404cf6-6120-49dc-b07a-1f223a2e005f",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "type": "array"
      },
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "aaf26d75-480a-4176-b4c6-ee544a325ac2",
        "refSchemaRef": "mbe://node.json",
        "type": "string",
        "description": "The parent objectId of the node. Empty if top node."
      },
      "canRead": {
        "description": "A list of the groups that can read the value of the node.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "5ede11e9-ccbe-425f-98ac-66d5136ed58b",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "credentials": {
        "anyOf": [
          {
            "usernamePassword": {
              "properties": {
                "username": {
                  "propertyId": "fc7d05e0-996d-4467-afab-6b99644d4aa0",
                  "type": "string"
                },
                "password": {
                  "propertyId": "fed1fe4b-31c5-4f1d-a6c8-0e6c38bbb0b8",
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password"
              ],
              "description": "A username and password combination",
              "propertyId": "d0c457b3-7341-4ddc-891d-f79831f89553",
              "type": "object"
            },
            "oneTimePassword": {
              "properties": {
                "password": {
                  "propertyId": "62e851e3-1db2-43a7-9b43-942ef459f82b",
                  "type": "string"
                },
                "username": {
                  "propertyId": "07ba9a88-5f50-4b86-8a4d-4cd080c2f912",
                  "type": "string"
                },
                "method": {
                  "type": "string",
                  "propertyId": "3570d360-43f3-469f-b68a-48d6287fb5cf",
                  "enum": [
                    "SMS",
                    "EMAIL",
                    "OTHER"
                  ]
                }
              },
              "required": [
                "username",
                "password",
                "method"
              ],
              "description": "Set of OTP settings.  Not implemented.",
              "propertyId": "29f57973-1a51-4dcc-82d9-acfe02bdcbf2",
              "type": "object"
            },
            "clientCertificate": {
              "properties": {
                "username": {
                  "propertyId": "268e4b30-14f9-4716-ba4c-2b7106fc30aa",
                  "type": "string"
                },
                "password": {
                  "propertyId": "0a09a3a4-1d05-4dea-81a2-31cfd3601aaf",
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password"
              ],
              "description": "A client certificate.  Not implemented.",
              "propertyId": "17cc191d-b26a-436f-9736-3c554cd7bbbd",
              "type": "object"
            }
          }
        ],
        "propertyId": "c5ec3ea2-3eda-4b63-8449-5c2cb775fc74"
      },
      "createdWhen": {
        "format": "date-time",
        "description": "The time the node was created",
        "propertyId": "293137d2-a97f-482d-8e29-2917b32f5e67",
        "type": "string"
      },
      "description": {
        "description": "The descriptive text of the node.",
        "propertyId": "674286ab-55b8-4e3f-918f-8d3fd9593602",
        "type": "string"
      },
      "canWrite": {
        "description": "A list of the groups that can write to the node(and create/delete subnodes).",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "98286b6b-8cba-4086-8a71-2d754ac023b2",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      }
    },
    "title": "User",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "mbe",
    "required": [
      "name",
      "createdWhen",
      "canRead",
      "canWrite",
      "groups",
      "schemaRef"
    ],
    "description": "MBE User Schema",
    "collection": "node"
  },
  "bpm://message_bpm_process_result.json": {
    "properties": {
      "sourceProcessId": {
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "description": "A reference to the processId of the source.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "result": {
        "properties": {},
        "additionalProperties": true,
        "description": "The return value of the process",
        "propertyId": "4a6d20f8-fd07-4f17-a86d-1b6e5b327733"
      },
      "destination": {
        "description": "The destination adress",
        "propertyId": "484808c0-d8f2-4d58-973b-777e445b1ebd",
        "type": "string"
      },
      "source": {
        "description": "The source address",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "string"
      },
      "messageId": {
        "description": "An Id to help the sender identify a response",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "number"
      },
      "destinationProcessId": {
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "description": "A reference to the processId of the destination.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "globals": {
        "properties": {},
        "additionalProperties": true,
        "description": "The global variables when the process finished",
        "propertyId": "90c836ee-d154-47f4-832c-6e767cbc1883",
        "type": "object"
      },
      "userId": {
        "propertyId": "1ea887ea-8de8-4cc1-9101-d912bd4816b0",
        "description": "The user sending the message.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      }
    },
    "title": "BPM Process result",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "bpm",
    "required": [
      "globals",
      "result"
    ],
    "description": "BPM Process result",
    "collection": "log"
  },
  "of://process_system.json": {
    "properties": {
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9b714fa-9f9f-4bd0-9500-3638ba2154e2",
        "type": "string",
        "description": "The object _id of the spawning parent process, an object id."
      },
      "spawnedWhen": {
        "format": "date-time",
        "description": "The time the process was spawned",
        "propertyId": "f509249d-409a-4b7c-8120-f8baefc71cb3",
        "type": "string"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "spawnedBy": {
        "description": "The OS user that spawned the process.",
        "propertyId": "f7efddae-81f8-40e2-9311-598217b159fc",
        "type": "string"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9b714fa-9f9f-4bd0-9500-3638ba2154e2",
        "type": "string",
        "description": "The object _id of the process, an object id."
      },
      "name": {
        "description": "A name of the process",
        "propertyId": "57e19341-162a-4117-a5ac-d72bab021ac3",
        "type": "string"
      },
      "systemPid": {
        "propertyId": "2fcfb498-daae-4b17-b283-dc4516c5faef",
        "description": "The pid(operating system process id) of the process",
        "isObjectId": "true",
        "type": "integer"
      }
    },
    "title": "System process instance",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "of",
    "required": [
      "systemPid",
      "spawnedBy",
      "name",
      "schemaRef"
    ],
    "description": "System process instance",
    "collection": "process"
  },
  "mbe://form_json.json": {
    "properties": {
      "formSchemaRef": {
        "description": "The description of the right",
        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
        "propertyId": "47edf1f9-89be-42bb-8868-2b4df50173d4",
        "type": "string"
      },
      "allowedChildTypes": {
        "description": "A list of the allowed types of children.",
        "items": {
          "format": "uri",
          "propertyId": "9161503f-a3fe-4b7e-8c0a-8553bd3f8043",
          "type": "string"
        },
        "type": "array"
      },
      "schemaRef": {
        "format": "uri",
        "description": "The schema ref of the node schema, a URI.",
        "propertyId": "e7b166f5-4bf0-4b8c-9a60-601030daa04b",
        "type": "string"
      },
      "name": {
        "description": "The friendly short name of the node.",
        "propertyId": "9ce4a360-53fe-4c02-b894-c5b1787cf835",
        "type": "string"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9487ec8-dfce-440a-a5d5-e65e89bc84aa",
        "type": "string",
        "description": "The objectId of the node."
      },
      "formDefinition": {
        "description": "The form definition",
        "propertyId": "6833a3c9-6ef6-4f74-9207-31d20174b1f0"
      },
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "aaf26d75-480a-4176-b4c6-ee544a325ac2",
        "refSchemaRef": "mbe://node.json",
        "type": "string",
        "description": "The parent objectId of the node. Empty if top node."
      },
      "canRead": {
        "description": "A list of the groups that can read the value of the node.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "5ede11e9-ccbe-425f-98ac-66d5136ed58b",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "createdWhen": {
        "format": "date-time",
        "description": "The time the node was created",
        "propertyId": "293137d2-a97f-482d-8e29-2917b32f5e67",
        "type": "string"
      },
      "description": {
        "description": "The descriptive text of the node.",
        "propertyId": "674286ab-55b8-4e3f-918f-8d3fd9593602",
        "type": "string"
      },
      "canWrite": {
        "description": "A list of the groups that can write to the node(and create/delete subnodes).",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "98286b6b-8cba-4086-8a71-2d754ac023b2",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      }
    },
    "title": "Schema form",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "mbe",
    "required": [
      "name",
      "createdWhen",
      "canRead",
      "canWrite",
      "formDefinition",
      "formSchemaRef"
    ],
    "description": "MBE Form for angular-schema-form",
    "collection": "node"
  },
  "mbe://session.json": {
    "version": "0.1",
    "title": "Session",
    "type": "object",
    "properties": {
      "_id": {
        "objectId": true,
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "03fd685a-a98b-408b-b9a3-e3877564f611",
        "type": "string",
        "description": "The object id of the session, an object id."
      },
      "user_id": {
        "objectId": true,
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "03fd685a-a98b-408b-b9a3-e3877564f611",
        "refSchemaRef": "mbe://user.json",
        "type": "string",
        "description": "The logged-in user."
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "21780645-9f2f-4b16-b4a4-65d9108dddb6",
        "type": "string"
      },
      "createdWhen": {
        "format": "date-time",
        "description": "The time the session was created",
        "propertyId": "877a78e9-5da4-406a-a9e1-e648d8f18e05",
        "type": "string"
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "mbe",
    "required": [
      "user_id",
      "createdWhen",
      "schemaRef"
    ],
    "description": "MBE Session Schema",
    "collection": "session"
  },
  "mbe://node.json": {
    "version": "0.1",
    "title": "Node",
    "type": "object",
    "properties": {
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "aaf26d75-480a-4176-b4c6-ee544a325ac2",
        "refSchemaRef": "mbe://node.json",
        "type": "string",
        "description": "The parent objectId of the node. Empty if top node."
      },
      "canRead": {
        "description": "A list of the groups that can read the value of the node.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "5ede11e9-ccbe-425f-98ac-66d5136ed58b",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "schemaRef": {
        "format": "uri",
        "description": "The schema ref of the node schema, a URI.",
        "propertyId": "e7b166f5-4bf0-4b8c-9a60-601030daa04b",
        "type": "string"
      },
      "createdWhen": {
        "format": "date-time",
        "description": "The time the node was created",
        "propertyId": "293137d2-a97f-482d-8e29-2917b32f5e67",
        "type": "string"
      },
      "allowedChildTypes": {
        "description": "A list of the allowed types of children.",
        "items": {
          "format": "uri",
          "propertyId": "9161503f-a3fe-4b7e-8c0a-8553bd3f8043",
          "type": "string"
        },
        "type": "array"
      },
      "description": {
        "description": "The descriptive text of the node.",
        "propertyId": "674286ab-55b8-4e3f-918f-8d3fd9593602",
        "type": "string"
      },
      "name": {
        "description": "The friendly short name of the node.",
        "propertyId": "9ce4a360-53fe-4c02-b894-c5b1787cf835",
        "type": "string"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9487ec8-dfce-440a-a5d5-e65e89bc84aa",
        "type": "string",
        "description": "The objectId of the node."
      },
      "canWrite": {
        "description": "A list of the groups that can write to the node(and create/delete subnodes).",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "98286b6b-8cba-4086-8a71-2d754ac023b2",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "mbe",
    "required": [
      "name",
      "createdWhen",
      "canRead",
      "canWrite",
      "schemaRef"
    ],
    "description": "MBE Node Schema",
    "collection": "node"
  },
  "of://log_progression.json": {
    "version": "0.1",
    "title": "Process state",
    "type": "object",
    "properties": {
      "schemaRef": {
        "format": "ui",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "processId": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9b714fa-9f9f-4bd0-9500-3638ba2154e2",
        "type": "string",
        "description": "The object _id of the process, an object id."
      },
      "progressionId": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "489aed92-d5a6-4884-b842-953dd836e27b",
        "type": "string",
        "description": "The object _id of the process, an object id."
      },
      "absolute": {
        "description": "A new absolute value for the progression.",
        "propertyId": "fcf2a503-a5aa-433b-9fd9-6087cfd43ca0",
        "type": "number"
      },
      "userId": {
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "55e937b7-9e58-49ad-9b42-c6557ca23d0a",
        "refSchemaRef": "mbe://user.json",
        "type": "string",
        "description": "The user that initiated the state change.",
        "isObjectId": "true"
      },
      "change": {
        "description": "The value to change the progression with.",
        "propertyId": "b383bfe3-3a7c-4449-9322-ca0dbab710b9",
        "type": "number"
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "of",
    "required": [
      "processId",
      "progressionId",
      "userId",
      "schemaRef"
    ],
    "description": "Process state log packet",
    "collection": "log"
  },
  "mbe://event.json": {
    "version": "0.1",
    "title": "Event",
    "type": "object",
    "properties": {
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "occurredWhen": {
        "format": "date-time",
        "description": "The time the event occurred",
        "propertyId": "965e56c4-2501-453e-b1c7-2fe4d22ca546",
        "type": "string"
      },
      "user_id": {
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "d1714064-a023-4d54-b801-4e6385cf6975",
        "refSchemaRef": "mbe://user.json",
        "type": "string",
        "description": "The user involved in the event.",
        "isObjectId": "true"
      },
      "node_id": {
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "a062bbc2-1f61-4237-a41f-c16482d5c196",
        "type": "string",
        "description": "The relevant _id in the node-collection, used for tracking changes to a node or identifying reporting functionality.",
        "isObjectId": "true"
      },
      "event": {
        "description": "The event that occurred",
        "propertyId": "aaef2cff-c762-48b5-86b7-06cc55aec675",
        "anyOf": [
          {
            "security": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "right",
                    "permission",
                    "attack"
                  ]
                }
              },
              "description": "A security related error occurred",
              "required": [
                "type"
              ],
              "additionalItems": false,
              "type": "object"
            },
            "add": {
              "description": "This document was written to a collection ",
              "type": "any"
            },
            "error": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "description": "This error occurred",
              "required": [
                "type"
              ],
              "additionalItems": false,
              "type": "object"
            },
            "notification": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "description": "This happened",
              "required": [
                "type"
              ],
              "additionalItems": false,
              "type": "object"
            },
            "remove": {
              "description": "This document was removed from a collection ",
              "type": "any"
            },
            "change": {
              "description": "This/these field(s) was changed in a collection",
              "items": [
                {
                  "properties": {
                    "before": {
                      "description": "The value before the change",
                      "type": "any"
                    },
                    "after": {
                      "description": "The value after the change",
                      "type": "any"
                    },
                    "propertyId": {
                      "description": "The field uuid of the change",
                      "type": "string"
                    }
                  },
                  "description": "An individual change",
                  "required": [
                    "propertyId"
                  ],
                  "additionalItems": false,
                  "type": "object"
                }
              ],
              "type": "array"
            }
          }
        ]
      },
      "writtenWhen": {
        "format": "date-time",
        "description": "The time the event was written to the database",
        "propertyId": "b2dc70cf-93a1-4275-842a-76fc48d1d2d2",
        "type": "string"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "dcf7fb13-f934-4121-90ec-c8992203a299",
        "type": "string",
        "description": "The object _id of the event, an object id."
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "mbe",
    "required": [
      "user_id",
      "writtenWhen",
      "occurredWhen",
      "node_id",
      "schemaRef"
    ],
    "description": "MBE Event Schema",
    "collection": "log"
  },
  "bpm://process_bpm.json": {
    "properties": {
      "pipPackages": {
        "description": "A list of pip packages dependencies names",
        "items": {
          "type": "string"
        },
        "propertyId": "7287e9cb-ec66-45a5-abfb-3e011619f896",
        "type": "array"
      },
      "spawnedWhen": {
        "format": "date-time",
        "description": "The time the process was spawned",
        "propertyId": "f509249d-409a-4b7c-8120-f8baefc71cb3",
        "type": "string"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "runAs": {
        "description": "The user to run the process as",
        "propertyId": "0fe69651-b912-4bd9-89ae-d1020b21fef9",
        "type": "string"
      },
      "spawnedBy": {
        "description": "The BPM user that spawned the process.",
        "propertyId": "a4990fa1-78f8-4aa1-bbf3-6e4c9863bcc0",
        "type": "string"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9b714fa-9f9f-4bd0-9500-3638ba2154e2",
        "type": "string",
        "description": "The object _id of the process, an object id."
      },
      "processDefinitionId": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9487ec8-dfce-440a-a5d5-e65e89bc84aa",
        "type": "string",
        "description": "The objectId of the process definition of this instance."
      },
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9b714fa-9f9f-4bd0-9500-3638ba2154e2",
        "type": "string",
        "description": "The object _id of the spawning parent process, an object id."
      },
      "entryPoint": {
        "properties": {
          "moduleName": {
            "description": "The name of the module",
            "propertyId": "a8760bb1-f5c8-4426-9e43-e5e11a070981",
            "type": "string"
          },
          "functionName": {
            "description": "The name of the function to call",
            "propertyId": "a8760bb1-f5c8-4426-9e43-e5e11a070981",
            "type": "string"
          }
        },
        "description": "The process should start by using this.",
        "type": "object"
      },
      "globals": {
        "properties": {},
        "propertyId": "90c836ee-d154-47f4-832c-6e767cbc1883",
        "description": "The global variables that is provided as input to the process",
        "additionalProperties": true,
        "type": "object"
      }
    },
    "title": "BPM process instance",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "bpm",
    "required": [
      "processDefinitionId",
      "spawnedBy"
    ],
    "description": "BPM process instance",
    "collection": "process"
  },
  "bpm://message_bpm_process_start.json": {
    "properties": {
      "processDefinitionId": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9487ec8-dfce-440a-a5d5-e65e89bc84aa",
        "type": "string",
        "description": "The objectId of the process definition of this instance."
      },
      "runAs": {
        "description": "The user to run the process as",
        "propertyId": "0fe69651-b912-4bd9-89ae-d1020b21fef9",
        "type": "string"
      },
      "sourceProcessId": {
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "description": "A reference to the processId of the source.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "pipPackages": {
        "description": "A list of pip packages dependencies names",
        "items": {
          "type": "string"
        },
        "propertyId": "7287e9cb-ec66-45a5-abfb-3e011619f896",
        "type": "array"
      },
      "entryPoint": {
        "properties": {
          "moduleName": {
            "description": "The name of the module",
            "propertyId": "a8760bb1-f5c8-4426-9e43-e5e11a070981",
            "type": "string"
          },
          "functionName": {
            "description": "The name of the function to call",
            "propertyId": "a8760bb1-f5c8-4426-9e43-e5e11a070981",
            "type": "string"
          }
        },
        "description": "The process should start by using this.",
        "type": "object"
      },
      "destination": {
        "description": "The destination adress",
        "propertyId": "484808c0-d8f2-4d58-973b-777e445b1ebd",
        "type": "string"
      },
      "source": {
        "description": "The source address",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "string"
      },
      "processId": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9b714fa-9f9f-4bd0-9500-3638ba2154e2",
        "type": "string",
        "description": "The object _id of the process, an object id."
      },
      "messageId": {
        "description": "An Id to help the sender identify a response",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "number"
      },
      "reason": {
        "description": "The reason the process was started.",
        "type": "string"
      },
      "userId": {
        "propertyId": "1ea887ea-8de8-4cc1-9101-d912bd4816b0",
        "description": "The user sending the message.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "globals": {
        "properties": {},
        "propertyId": "90c836ee-d154-47f4-832c-6e767cbc1883",
        "description": "The global variables that is provided as input to the process",
        "additionalProperties": true,
        "type": "object"
      },
      "destinationProcessId": {
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "description": "A reference to the processId of the destination.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      }
    },
    "title": "Start BPM Process message",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "bpm",
    "required": [
      "processDefinitionId",
      "processId",
      "userId"
    ],
    "description": "Start BPM Process instance schema",
    "collection": "log"
  },
  "qal://sql.json": {
    "properties": {
      "resources": {
        "items": {
          "properties": {
            "caption": {
              "type": "string"
            },
            "uuid": {
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "type": "string"
            },
            "base_path": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "additionalProperties": true,
          "type": "object"
        },
        "type": "array"
      },
      "statement": {
        "$ref": "#/definitions/statement"
      }
    },
    "type": "object",
    "definitions": {
      "condition_part": {
        "anyOf": [
          {
            "properties": {
              "ParameterConditions": {
                "$ref": "#/definitions/ParameterConditions"
              }
            }
          },
          {
            "properties": {
              "ParameterCondition": {
                "$ref": "#/definitions/ParameterCondition"
              }
            }
          },
          {
            "properties": {
              "VerbSelect": {
                "$ref": "#/definitions/VerbSelect"
              }
            }
          },
          {
            "properties": {
              "ParameterExpression": {
                "$ref": "#/definitions/ParameterExpression"
              }
            }
          },
          {
            "properties": {
              "ParameterString": {
                "$ref": "#/definitions/ParameterString"
              }
            }
          },
          {
            "properties": {
              "ParameterNumeric": {
                "$ref": "#/definitions/ParameterNumeric"
              }
            }
          },
          {
            "properties": {
              "ParameterIdentifier": {
                "$ref": "#/definitions/ParameterIdentifier"
              }
            }
          },
          {
            "properties": {
              "ParameterCast": {
                "$ref": "#/definitions/ParameterCast"
              }
            }
          },
          {
            "properties": {
              "ParameterFunction": {
                "$ref": "#/definitions/ParameterFunction"
              }
            }
          },
          {
            "properties": {
              "ParameterIn": {
                "$ref": "#/definitions/ParameterIn"
              }
            }
          },
          {
            "properties": {
              "ParameterDataset": {
                "$ref": "#/definitions/ParameterDataset"
              }
            }
          },
          {
            "properties": {
              "ParameterCase": {
                "$ref": "#/definitions/ParameterCase"
              }
            }
          },
          {
            "properties": {
              "ParameterSet": {
                "$ref": "#/definitions/ParameterSet"
              }
            }
          }
        ],
        "type": "object"
      },
      "ArrayString": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "MatrixDataset": {
        "properties": {
          "field_names": {
            "$ref": "#/definitions/ArrayString"
          },
          "field_types": {
            "$ref": "#/definitions/datatypes"
          },
          "data_table": {
            "$ref": "#/definitions/TabularExpressionItem"
          }
        },
        "type": "object"
      },
      "ArrayParameterColumndefinition": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ParameterColumndefinition"
        },
        "minItems": 0,
        "uniqueItems": true
      },
      "ParameterRemotable": {
        "properties": {
          "resource_uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ArrayStatement": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/statement"
        },
        "minItems": 0,
        "uniqueItems": true
      },
      "join_types": {
        "enum": [
          "",
          "INNER",
          "LEFT OUTER",
          "RIGHT OUTER",
          "FULL OUTER",
          "CROSS"
        ],
        "type": "string"
      },
      "ParameterDataset": {
        "properties": {
          "operator": {
            "type": "string"
          },
          "resource_uuid": {
            "type": "string"
          },
          "data_source": {
            "$ref": "#/definitions/data_source_types"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ParameterSet": {
        "properties": {
          "row_separator": {
            "type": "string"
          },
          "set_operator": {
            "$ref": "#/definitions/set_operator"
          },
          "subsets": {
            "$ref": "#/definitions/ArrayTabularExpressionItem"
          }
        },
        "type": "object"
      },
      "set_operator": {
        "enum": [
          "UNION",
          "INTERSECT",
          "DIFFERENCE"
        ],
        "type": "string"
      },
      "ArrayExpressionItem": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "properties": {
                "VerbSelect": {
                  "$ref": "#/definitions/VerbSelect"
                }
              }
            },
            {
              "properties": {
                "ParameterExpression": {
                  "$ref": "#/definitions/ParameterExpression"
                }
              }
            },
            {
              "properties": {
                "ParameterString": {
                  "$ref": "#/definitions/ParameterString"
                }
              }
            },
            {
              "properties": {
                "ParameterNumeric": {
                  "$ref": "#/definitions/ParameterNumeric"
                }
              }
            },
            {
              "properties": {
                "ParameterIdentifier": {
                  "$ref": "#/definitions/ParameterIdentifier"
                }
              }
            },
            {
              "properties": {
                "ParameterCast": {
                  "$ref": "#/definitions/ParameterCast"
                }
              }
            },
            {
              "properties": {
                "ParameterFunction": {
                  "$ref": "#/definitions/ParameterFunction"
                }
              }
            },
            {
              "properties": {
                "ParameterIn": {
                  "$ref": "#/definitions/ParameterIn"
                }
              }
            },
            {
              "properties": {
                "ParameterDataset": {
                  "$ref": "#/definitions/ParameterDataset"
                }
              }
            },
            {
              "properties": {
                "ParameterCase": {
                  "$ref": "#/definitions/ParameterCase"
                }
              }
            },
            {
              "properties": {
                "ParameterSet": {
                  "$ref": "#/definitions/ParameterSet"
                }
              }
            }
          ],
          "type": "object"
        },
        "minItems": 0,
        "uniqueItems": true
      },
      "ParameterDDL": {
        "properties": {
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ArrayParameterIdentifier": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ParameterIdentifier"
        },
        "minItems": 0,
        "uniqueItems": true
      },
      "RDBMSDataset": {
        "properties": {
          "field_names": {
            "$ref": "#/definitions/ArrayString"
          },
          "query": {
            "type": "string"
          },
          "data_table": {
            "$ref": "#/definitions/TabularExpressionItem"
          },
          "field_types": {
            "$ref": "#/definitions/datatypes"
          },
          "table_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ParameterCase": {
        "properties": {
          "when_statements": {
            "$ref": "#/definitions/ArrayParameterWhen"
          },
          "else_statement": {
            "$ref": "#/definitions/ArrayExpressionItem"
          },
          "operator": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ParameterExpressionItem": {
        "properties": {
          "operator": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ArrayParameterConstraint": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ParameterConstraint"
        },
        "minItems": 0,
        "uniqueItems": true
      },
      "ParameterFunction": {
        "properties": {
          "operator": {
            "type": "string"
          },
          "parameters": {
            "$ref": "#/definitions/ArrayExpressionItem"
          },
          "row_separator": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "csv_dialects": {
        "enum": [
          "unix",
          "excel-tab",
          "excel"
        ],
        "type": "string"
      },
      "index_types": {
        "enum": [
          "UNIQUE",
          "CLUSTERED",
          "NONCLUSTERED"
        ],
        "type": "string"
      },
      "ParameterConstraint": {
        "properties": {
          "checkconditions": {
            "$ref": "#/definitions/ArrayParameterCondition"
          },
          "references": {
            "$ref": "#/definitions/ArrayParameterIdentifier"
          },
          "constraint_type": {
            "$ref": "#/definitions/constraint_types"
          },
          "row_separator": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ArrayParameterCondition": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ParameterCondition"
        },
        "minItems": 0,
        "uniqueItems": true
      },
      "ParameterIdentifier": {
        "properties": {
          "prefix": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ParameterCast": {
        "properties": {
          "expression": {
            "$ref": "#/definitions/ArrayExpressionItem"
          },
          "datatype": {
            "$ref": "#/definitions/datatypes"
          },
          "operator": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ParameterParameter": {
        "properties": {
          "datatype": {
            "$ref": "#/definitions/datatypes"
          },
          "operator": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ArrayTabularExpressionItem": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "properties": {
                "VerbSelect": {
                  "$ref": "#/definitions/VerbSelect"
                }
              }
            },
            {
              "properties": {
                "ParameterDataset": {
                  "$ref": "#/definitions/ParameterDataset"
                }
              }
            },
            {
              "properties": {
                "ParameterSet": {
                  "$ref": "#/definitions/ParameterSet"
                }
              }
            }
          ],
          "type": "object"
        },
        "minItems": 0,
        "uniqueItems": true
      },
      "ParameterColumndefinition": {
        "properties": {
          "default": {
            "type": "string"
          },
          "datatype": {
            "$ref": "#/definitions/datatypes"
          },
          "notnull": {
            "type": "boolean"
          },
          "row_separator": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "in_types": {
        "enum": [
          "VerbSelect",
          "ParameterString"
        ],
        "type": "string"
      },
      "data_source_types": {
        "anyOf": [
          {
            "properties": {
              "FlatfileDataset": {
                "$ref": "#/definitions/FlatfileDataset"
              }
            }
          },
          {
            "properties": {
              "XpathDataset": {
                "$ref": "#/definitions/XpathDataset"
              }
            }
          },
          {
            "properties": {
              "MatrixDataset": {
                "$ref": "#/definitions/MatrixDataset"
              }
            }
          },
          {
            "properties": {
              "SpreadsheetDataset": {
                "$ref": "#/definitions/SpreadsheetDataset"
              }
            }
          },
          {
            "properties": {
              "RDBMSDataset": {
                "$ref": "#/definitions/RDBMSDataset"
              }
            }
          }
        ],
        "type": "object"
      },
      "ParameterSource": {
        "properties": {
          "join_type": {
            "$ref": "#/definitions/join_types"
          },
          "resource_uuid": {
            "type": "string"
          },
          "expression": {
            "$ref": "#/definitions/ArrayExpressionItem"
          },
          "alias": {
            "type": "string"
          },
          "conditions": {
            "$ref": "#/definitions/ArrayParameterCondition"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ArrayParameterAssignment": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ParameterAssignment"
        },
        "minItems": 0,
        "uniqueItems": true
      },
      "FlatfileDataset": {
        "properties": {
          "quotechar": {
            "type": "string"
          },
          "field_types": {
            "$ref": "#/definitions/datatypes"
          },
          "skipinitialspace": {
            "type": "string"
          },
          "delimiter": {
            "type": "string"
          },
          "quoting": {
            "$ref": "#/definitions/quoting"
          },
          "field_names": {
            "$ref": "#/definitions/ArrayString"
          },
          "data_table": {
            "$ref": "#/definitions/TabularExpressionItem"
          },
          "has_header": {
            "type": "boolean"
          },
          "csv_dialect": {
            "$ref": "#/definitions/csv_dialects"
          },
          "filename": {
            "type": "string"
          },
          "lineterminator": {
            "type": "string"
          },
          "escapechar": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "VerbUpdate": {
        "properties": {
          "table_identifier": {
            "$ref": "#/definitions/ParameterIdentifier"
          },
          "conditions": {
            "$ref": "#/definitions/ArrayParameterCondition"
          },
          "assignments": {
            "$ref": "#/definitions/ArrayParameterAssignment"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ParameterCondition": {
        "properties": {
          "left": {
            "$ref": "#/definitions/condition_part"
          },
          "right": {
            "$ref": "#/definitions/condition_part"
          },
          "operator": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          },
          "and_or": {
            "$ref": "#/definitions/and_or"
          }
        },
        "type": "object"
      },
      "quoting": {
        "enum": [
          "QUOTE_MINIMAL",
          "QUOTE_ALL",
          "QUOTE_NONE"
        ],
        "type": "string"
      },
      "and_or": {
        "enum": [
          "AND",
          "OR"
        ],
        "type": "string"
      },
      "ParameterAssignment": {
        "properties": {
          "left": {
            "$ref": "#/definitions/condition_part"
          },
          "row_separator": {
            "type": "string"
          },
          "right": {
            "$ref": "#/definitions/condition_part"
          }
        },
        "type": "object"
      },
      "ParameterIn": {
        "properties": {
          "operator": {
            "type": "string"
          },
          "in_values": {
            "$ref": "#/definitions/in_types"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ArrayParameterString": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ParameterString"
        },
        "minItems": 0,
        "uniqueItems": true
      },
      "VerbInsert": {
        "properties": {
          "data": {
            "$ref": "#/definitions/TabularExpressionItem"
          },
          "destination_identifier": {
            "$ref": "#/definitions/ParameterIdentifier"
          },
          "column_identifiers": {
            "$ref": "#/definitions/ArrayParameterIdentifier"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "VerbDelete": {
        "properties": {
          "sources": {
            "$ref": "#/definitions/ArrayParameterSource"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomDataset": {
        "properties": {
          "field_names": {
            "$ref": "#/definitions/ArrayString"
          },
          "field_types": {
            "$ref": "#/definitions/datatypes"
          },
          "data_table": {
            "$ref": "#/definitions/TabularExpressionItem"
          }
        },
        "type": "object"
      },
      "TabularExpressionItem": {
        "anyOf": [
          {
            "properties": {
              "VerbSelect": {
                "$ref": "#/definitions/VerbSelect"
              }
            }
          },
          {
            "properties": {
              "ParameterDataset": {
                "$ref": "#/definitions/ParameterDataset"
              }
            }
          },
          {
            "properties": {
              "ParameterSet": {
                "$ref": "#/definitions/ParameterSet"
              }
            }
          }
        ],
        "type": "object"
      },
      "constraint_types": {
        "enum": [
          "NOT NULL",
          "UNIQUE",
          "PRIMARY KEY",
          "FOREIGN KEY",
          "CHECK",
          "DEFAULT"
        ],
        "type": "string"
      },
      "ArrayParameterSource": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ParameterSource"
        },
        "minItems": 0,
        "uniqueItems": true
      },
      "ArrayList": {
        "type": "array"
      },
      "ArrayParameterOrderByItem": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ParameterOrderByItem"
        },
        "minItems": 0,
        "uniqueItems": true
      },
      "ArrayParameterField": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ParameterField"
        },
        "minItems": 0,
        "uniqueItems": true
      },
      "VerbCreateTable": {
        "properties": {
          "columns": {
            "$ref": "#/definitions/ArrayParameterColumndefinition"
          },
          "constraints": {
            "$ref": "#/definitions/ArrayParameterConstraint"
          },
          "row_separator": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SpreadsheetDataset": {
        "properties": {
          "has_header": {
            "type": "boolean"
          },
          "sheet_name": {
            "type": "string"
          },
          "field_types": {
            "$ref": "#/definitions/datatypes"
          },
          "x_offset": {
            "type": "integer"
          },
          "filename": {
            "type": "string"
          },
          "field_names": {
            "$ref": "#/definitions/ArrayString"
          },
          "data_table": {
            "$ref": "#/definitions/TabularExpressionItem"
          },
          "y_offset": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "XpathDataset": {
        "properties": {
          "field_types": {
            "$ref": "#/definitions/datatypes"
          },
          "filename": {
            "type": "string"
          },
          "rows_xpath": {
            "type": "string"
          },
          "field_names": {
            "$ref": "#/definitions/ArrayString"
          },
          "data_table": {
            "$ref": "#/definitions/TabularExpressionItem"
          },
          "field_xpaths": {
            "$ref": "#/definitions/ArrayString"
          },
          "xpath_data_format": {
            "$ref": "#/definitions/xpath_data_format"
          }
        },
        "type": "object"
      },
      "ParameterField": {
        "properties": {
          "alias": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          },
          "expression": {
            "$ref": "#/definitions/ArrayExpressionItem"
          }
        },
        "type": "object"
      },
      "ParameterConditions": {
        "properties": {},
        "type": "object"
      },
      "ParameterExpression": {
        "properties": {
          "expressionitems": {
            "$ref": "#/definitions/ArrayExpressionItem"
          },
          "operator": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "xpath_data_format": {
        "enum": [
          "XML",
          "XHTML",
          "HTML"
        ],
        "type": "string"
      },
      "VerbSelect": {
        "properties": {
          "order_by": {
            "$ref": "#/definitions/ArrayParameterOrderByItem"
          },
          "resource_uuid": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          },
          "fields": {
            "$ref": "#/definitions/ArrayParameterField"
          },
          "sources": {
            "$ref": "#/definitions/ArrayParameterSource"
          },
          "operator": {
            "type": "string"
          },
          "top_limit": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ParameterString": {
        "properties": {
          "escape_character": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "string_value": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ParameterBase": {
        "properties": {
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ParameterNumeric": {
        "properties": {
          "numeric_value": {
            "type": "number"
          },
          "operator": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "VerbDropTable": {
        "properties": {
          "row_separator": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "VerbCreateIndex": {
        "properties": {
          "index_type": {
            "$ref": "#/definitions/index_types"
          },
          "column_names": {
            "$ref": "#/definitions/ArrayString"
          },
          "tablename": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ParameterOrderByItem": {
        "properties": {
          "direction": {
            "type": "string"
          },
          "expressionitems": {
            "$ref": "#/definitions/ArrayExpressionItem"
          },
          "operator": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "db_types": {
        "enum": [
          "MySQL",
          "PostgreSQL",
          "Oracle",
          "DB2",
          "SQLserver"
        ],
        "type": "string"
      },
      "datatypes": {
        "pattern": "(integer|string|string(\\(.*\\))|serial|timestamp)",
        "type": "string"
      },
      "ParameterWhen": {
        "properties": {
          "conditions": {
            "$ref": "#/definitions/ArrayParameterCondition"
          },
          "result": {
            "$ref": "#/definitions/ArrayExpressionItem"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "VerbCustom": {
        "properties": {
          "sql_sqlserver": {
            "type": "string"
          },
          "sql_mysql": {
            "type": "string"
          },
          "sql_oracle": {
            "type": "string"
          },
          "sql_db2": {
            "type": "string"
          },
          "sql_postgresql": {
            "type": "string"
          },
          "row_separator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "statement": {
        "anyOf": [
          {
            "properties": {
              "VerbCreateTable": {
                "$ref": "#/definitions/VerbCreateTable"
              }
            }
          },
          {
            "properties": {
              "VerbCreateIndex": {
                "$ref": "#/definitions/VerbCreateIndex"
              }
            }
          },
          {
            "properties": {
              "VerbSelect": {
                "$ref": "#/definitions/VerbSelect"
              }
            }
          },
          {
            "properties": {
              "VerbCustom": {
                "$ref": "#/definitions/VerbCustom"
              }
            }
          },
          {
            "properties": {
              "VerbInsert": {
                "$ref": "#/definitions/VerbInsert"
              }
            }
          },
          {
            "properties": {
              "VerbDelete": {
                "$ref": "#/definitions/VerbDelete"
              }
            }
          },
          {
            "properties": {
              "VerbUpdate": {
                "$ref": "#/definitions/VerbUpdate"
              }
            }
          }
        ],
        "type": "object"
      },
      "ArrayParameterWhen": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ParameterWhen"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "namespace": "qal",
    "version": "0.5",
    "description": "The JSON Schema for QAL SQL settings",
    "title": "QAL SQL JSON Schema",
    "required": [
      "statement"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "schemaRef": "f50986d4-269c-45e7-bfe7-7cf3177262ef"
  },
  "of://node_admin.json": {
    "properties": {
      "address": {
        "description": "The peer address.",
        "propertyId": "f8d3b4f5-e40c-438b-8088-8ccab7cae3c",
        "type": "string"
      },
      "allowedChildTypes": {
        "description": "A list of the allowed types of children.",
        "items": {
          "format": "uri",
          "propertyId": "9161503f-a3fe-4b7e-8c0a-8553bd3f8043",
          "type": "string"
        },
        "type": "array"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "name": {
        "description": "The friendly short name of the node.",
        "propertyId": "9ce4a360-53fe-4c02-b894-c5b1787cf835",
        "type": "string"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9487ec8-dfce-440a-a5d5-e65e89bc84aa",
        "type": "string",
        "description": "The objectId of the node."
      },
      "theme": {
        "description": "The theme of the admin user interface",
        "type": "string"
      },
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "aaf26d75-480a-4176-b4c6-ee544a325ac2",
        "refSchemaRef": "mbe://node.json",
        "type": "string",
        "description": "The parent objectId of the node. Empty if top node."
      },
      "canRead": {
        "description": "A list of the groups that can read the value of the node.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "5ede11e9-ccbe-425f-98ac-66d5136ed58b",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "peerType": {
        "description": "The peer type",
        "propertyId": "de5a8e20-5554-4746-a94b-7ab12c005b29",
        "enum": [
          "agent",
          "broker",
          "admin",
          "application"
        ]
      },
      "createdWhen": {
        "format": "date-time",
        "description": "The time the node was created",
        "propertyId": "293137d2-a97f-482d-8e29-2917b32f5e67",
        "type": "string"
      },
      "description": {
        "description": "The descriptive text of the node.",
        "propertyId": "674286ab-55b8-4e3f-918f-8d3fd9593602",
        "type": "string"
      },
      "canWrite": {
        "description": "A list of the groups that can write to the node(and create/delete subnodes).",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "98286b6b-8cba-4086-8a71-2d754ac023b2",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      }
    },
    "title": "Settings for an instance of the admin user interface",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "of",
    "required": [
      "name",
      "createdWhen",
      "schemaRef",
      "canRead",
      "canWrite",
      "address"
    ],
    "description": "An admin ui",
    "collection": "node"
  },
  "qal://transformation.json": {
    "properties": {},
    "type": "object",
    "definitions": {
      "Mapping": {
        "properties": {
          "is_key": {
            "type": "boolean"
          },
          "dest_reference": {
            "type": "string"
          },
          "src_reference": {
            "type": "string"
          },
          "src_datatype": {
            "type": "string"
          },
          "substitution": {
            "properties": {},
            "type": "object"
          }
        },
        "type": "object"
      },
      "Replace": {
        "properties": {
          "max": {
            "type": "string"
          },
          "new": {
            "type": "string"
          },
          "old": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "IfEmpty": {
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Trim": {
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReplaceRegex": {
        "properties": {
          "max": {
            "type": "string"
          },
          "new": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          },
          "compiled_regex": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Substitution": {
        "properties": {},
        "type": "object"
      },
      "Merge": {
        "properties": {
          "mappings": {
            "items": {
              "properties": {
                "is_key": {
                  "type": "boolean"
                },
                "dest_reference": {
                  "type": "string"
                },
                "src_reference": {
                  "type": "string"
                },
                "src_datatype": {
                  "type": "string"
                },
                "substitution": {
                  "properties": {},
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "post_execute_sql": {
            "type": "string"
          },
          "insert": {
            "type": "boolean"
          },
          "update": {
            "type": "boolean"
          },
          "resources": {
            "items": {
              "properties": {
                "caption": {
                  "type": "string"
                },
                "uuid": {
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                  "type": "string"
                },
                "base_path": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array"
          },
          "delete": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Cast": {
        "properties": {
          "dest_type": {
            "type": "string"
          },
          "format_string": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "namespace": "qal",
    "version": "0.5",
    "description": "The JSON Schema for QAL resources",
    "title": "QAL Transformations",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "schemaRef": "799272d2-6bb8-4177-b183-7be2d5fdb287"
  },
  "of://message_error.json": {
    "properties": {
      "sourceProcessId": {
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "description": "A reference to the processId of the source.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "destination": {
        "description": "The destination adress",
        "propertyId": "484808c0-d8f2-4d58-973b-777e445b1ebd",
        "type": "string"
      },
      "source": {
        "description": "The source address",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "string"
      },
      "messageId": {
        "description": "An Id to help the sender identify a response",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "number"
      },
      "errorMessage": {
        "description": "The error message",
        "propertyId": "8b32a20c-a58f-4fa8-8eae-852ddef2ccdb",
        "type": "string"
      },
      "destinationProcessId": {
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "description": "A reference to the processId of the destination.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "userId": {
        "propertyId": "1ea887ea-8de8-4cc1-9101-d912bd4816b0",
        "description": "The user sending the message.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      }
    },
    "title": "Error message",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "of",
    "required": [
      "errorMessage",
      "destination",
      "source",
      "schemaRef",
      "messageId"
    ],
    "description": "Error message",
    "collection": "log"
  },
  "mbe://group.json": {
    "properties": {
      "rights": {
        "description": "The rights this group have.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "bd1ce980-86c7-11e4-b4a9-0800200c9a66",
          "type": "string"
        },
        "type": "array"
      },
      "allowedChildTypes": {
        "description": "A list of the allowed types of children.",
        "items": {
          "format": "uri",
          "propertyId": "9161503f-a3fe-4b7e-8c0a-8553bd3f8043",
          "type": "string"
        },
        "type": "array"
      },
      "schemaRef": {
        "format": "uri",
        "description": "The schema ref of the node schema, a URI.",
        "propertyId": "e7b166f5-4bf0-4b8c-9a60-601030daa04b",
        "type": "string"
      },
      "name": {
        "description": "The friendly short name of the node.",
        "propertyId": "9ce4a360-53fe-4c02-b894-c5b1787cf835",
        "type": "string"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9487ec8-dfce-440a-a5d5-e65e89bc84aa",
        "type": "string",
        "description": "The objectId of the node."
      },
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "aaf26d75-480a-4176-b4c6-ee544a325ac2",
        "refSchemaRef": "mbe://node.json",
        "type": "string",
        "description": "The parent objectId of the node. Empty if top node."
      },
      "canRead": {
        "description": "A list of the groups that can read the value of the node.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "5ede11e9-ccbe-425f-98ac-66d5136ed58b",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "createdWhen": {
        "format": "date-time",
        "description": "The time the node was created",
        "propertyId": "293137d2-a97f-482d-8e29-2917b32f5e67",
        "type": "string"
      },
      "description": {
        "description": "The descriptive text of the node.",
        "propertyId": "674286ab-55b8-4e3f-918f-8d3fd9593602",
        "type": "string"
      },
      "canWrite": {
        "description": "A list of the groups that can write to the node(and create/delete subnodes).",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "98286b6b-8cba-4086-8a71-2d754ac023b2",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      }
    },
    "title": "Group",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "mbe",
    "required": [
      "name",
      "createdWhen",
      "canRead",
      "canWrite",
      "rights",
      "schemaRef"
    ],
    "description": "MBE Group Schema",
    "collection": "node"
  },
  "mbe://conditions.json": {
    "version": "0.1",
    "title": "Conditions",
    "type": "object",
    "properties": {
      "conditions": {
        "patternProperties": {
          ".*": {}
        },
        "description": "The conditions.",
        "minProperties": 0,
        "type": "object"
      },
      "collection": {
        "description": "The collection they apply to.",
        "type": "string"
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "mbe",
    "required": [
      "conditions",
      "collection"
    ],
    "description": "MBE Conditions schema",
    "collection": "*"
  },
  "bpm://log_process_message.json": {
    "version": "0.1",
    "title": "Process log message",
    "type": "object",
    "properties": {
      "processId": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9b714fa-9f9f-4bd0-9500-3638ba2154e2",
        "type": "string",
        "description": "The object _id of the process, an object id."
      },
      "message": {
        "description": "The message",
        "propertyId": "efc52798-4639-495b-b462-90099cf18ff5",
        "type": "string"
      },
      "kind": {
        "description": "The log level",
        "type": "string",
        "propertyId": "efc52798-4639-495b-b462-90099cf18ff5",
        "enum": [
          "info",
          "warning",
          "error"
        ]
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "createdWhen": {
        "format": "date-time",
        "description": "The time the reported happened",
        "propertyId": "3236ff1d-3d30-43c6-a06d-db29242afca8",
        "type": "string"
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "bpm",
    "required": [
      "processId",
      "message",
      "createdWhen",
      "schemaRef"
    ],
    "description": "Process log message",
    "collection": "log"
  },
  "mbe://type.json": {
    "version": 0.1,
    "title": "Type",
    "type": "string",
    "properties": {
      "uuid": {
        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
        "type": "string"
      },
      "objectId": {
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "datetime": {
        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}$",
        "type": "string"
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "mbe",
    "description": "MBE type definitions",
    "collection": ""
  },
  "mbe://right.json": {
    "properties": {
      "allowedChildTypes": {
        "description": "A list of the allowed types of children.",
        "items": {
          "format": "uri",
          "propertyId": "9161503f-a3fe-4b7e-8c0a-8553bd3f8043",
          "type": "string"
        },
        "type": "array"
      },
      "schemaRef": {
        "format": "uri",
        "description": "The schema ref of the node schema, a URI.",
        "propertyId": "e7b166f5-4bf0-4b8c-9a60-601030daa04b",
        "type": "string"
      },
      "name": {
        "description": "The friendly short name of the node.",
        "propertyId": "9ce4a360-53fe-4c02-b894-c5b1787cf835",
        "type": "string"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9487ec8-dfce-440a-a5d5-e65e89bc84aa",
        "type": "string",
        "description": "The objectId of the node."
      },
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "aaf26d75-480a-4176-b4c6-ee544a325ac2",
        "refSchemaRef": "mbe://node.json",
        "type": "string",
        "description": "The parent objectId of the node. Empty if top node."
      },
      "canRead": {
        "description": "A list of the groups that can read the value of the node.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "5ede11e9-ccbe-425f-98ac-66d5136ed58b",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "createdWhen": {
        "format": "date-time",
        "description": "The time the node was created",
        "propertyId": "293137d2-a97f-482d-8e29-2917b32f5e67",
        "type": "string"
      },
      "description": {
        "description": "The description of the right",
        "propertyId": "01678a5c-956e-44fb-b6e0-f549f5042af9",
        "type": "string"
      },
      "canWrite": {
        "description": "A list of the groups that can write to the node(and create/delete subnodes).",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "98286b6b-8cba-4086-8a71-2d754ac023b2",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      }
    },
    "title": "Right",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "mbe",
    "required": [
      "name",
      "createdWhen",
      "canRead",
      "canWrite",
      "schemaRef"
    ],
    "description": "MBE Right Schema",
    "collection": "node"
  },
  "of://peer.json": {
    "version": "0.1",
    "title": "A peer",
    "type": "object",
    "properties": {
      "address": {
        "description": "The peer address.",
        "propertyId": "f8d3b4f5-e40c-438b-8088-8ccab7cae3c",
        "type": "string"
      },
      "peerType": {
        "description": "The peer type",
        "propertyId": "de5a8e20-5554-4746-a94b-7ab12c005b29",
        "enum": [
          "agent",
          "broker",
          "admin",
          "application"
        ]
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "of",
    "required": [
      "address",
      "peerType",
      "schemaRef"
    ],
    "description": "The properties associated with an Optimal BPM peer",
    "collection": ""
  },
  "bpm://node_process.json": {
    "properties": {
      "pipPackages": {
        "description": "A list of pip packages dependencies names",
        "items": {
          "type": "string"
        },
        "propertyId": "7287e9cb-ec66-45a5-abfb-3e011619f896",
        "type": "array"
      },
      "allowedChildTypes": {
        "description": "A list of the allowed types of children.",
        "items": {
          "format": "uri",
          "propertyId": "9161503f-a3fe-4b7e-8c0a-8553bd3f8043",
          "type": "string"
        },
        "type": "array"
      },
      "schemaRef": {
        "format": "uri",
        "description": "The schema ref of the node schema, a URI.",
        "propertyId": "e7b166f5-4bf0-4b8c-9a60-601030daa04b",
        "type": "string"
      },
      "runAs": {
        "description": "The user to run the process as",
        "propertyId": "0fe69651-b912-4bd9-89ae-d1020b21fef9",
        "type": "string"
      },
      "name": {
        "description": "The friendly short name of the node.",
        "propertyId": "9ce4a360-53fe-4c02-b894-c5b1787cf835",
        "type": "string"
      },
      "canStart": {
        "description": "A list of the groups that are allowed to start these processes.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "7774173f-1948-4b61-8834-aaec70f2b050",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9487ec8-dfce-440a-a5d5-e65e89bc84aa",
        "type": "string",
        "description": "The objectId of the node."
      },
      "folder": {
        "description": "The location of the process",
        "propertyId": "c399f545-23a0-41bb-b8e1-20d8263c15d9",
        "type": "string"
      },
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "aaf26d75-480a-4176-b4c6-ee544a325ac2",
        "refSchemaRef": "mbe://node.json",
        "type": "string",
        "description": "The parent objectId of the node. Empty if top node."
      },
      "entryPoint": {
        "properties": {
          "moduleName": {
            "description": "The name of the module",
            "propertyId": "a8760bb1-f5c8-4426-9e43-e5e11a070981",
            "type": "string"
          },
          "functionName": {
            "description": "The name of the function to call",
            "propertyId": "a8760bb1-f5c8-4426-9e43-e5e11a070981",
            "type": "string"
          }
        },
        "description": "The process should start by using this.",
        "type": "object"
      },
      "canRead": {
        "description": "A list of the groups that can read the value of the node.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "5ede11e9-ccbe-425f-98ac-66d5136ed58b",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "createdWhen": {
        "format": "date-time",
        "description": "The time the node was created",
        "propertyId": "293137d2-a97f-482d-8e29-2917b32f5e67",
        "type": "string"
      },
      "description": {
        "description": "The descriptive text of the node.",
        "propertyId": "674286ab-55b8-4e3f-918f-8d3fd9593602",
        "type": "string"
      },
      "canStop": {
        "description": "A list of the groups that are allowed to stop these processes.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "8ae1173b-6055-43f0-af8f-e3144e3b9a78",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "globals": {
        "properties": {},
        "propertyId": "90c836ee-d154-47f4-832c-6e767cbc1883",
        "description": "The global variables that is provided as input to the process",
        "additionalProperties": true,
        "type": "object"
      },
      "canWrite": {
        "description": "A list of the groups that can write to the node(and create/delete subnodes).",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "98286b6b-8cba-4086-8a71-2d754ac023b2",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      }
    },
    "title": "BPM Process definition node",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "bpm",
    "required": [
      "canStart",
      "canStop"
    ],
    "description": "A BPM Process definition node",
    "collection": "node"
  },
  "qal://resources.json": {
    "properties": {
      "resources": {
        "items": {
          "$ref": "#/definitions/Resource"
        },
        "type": "array"
      }
    },
    "title": "QAL Resources",
    "definitions": {
      "Resource": {
        "properties": {
          "caption": {
            "type": "string"
          },
          "uuid": {
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
            "type": "string"
          },
          "base_path": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "additionalProperties": true,
        "type": "object"
      }
    },
    "namespace": "qal",
    "version": "0.5",
    "description": "The JSON Schema for QAL resources",
    "type": "object",
    "required": [
      "resources"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "schemaRef": "9b3f3211-60c9-44c0-b5bd-cd565ae2ec11"
  },
  "of://message.json": {
    "version": "0.1",
    "title": "Message",
    "type": "object",
    "properties": {
      "source": {
        "description": "The source address",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "string"
      },
      "destination": {
        "description": "The destination adress",
        "propertyId": "484808c0-d8f2-4d58-973b-777e445b1ebd",
        "type": "string"
      },
      "sourceProcessId": {
        "description": "A reference to the processId of the source.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "type": "string"
      },
      "messageId": {
        "description": "An Id to help the sender identify a response",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "number"
      },
      "userId": {
        "description": "The user sending the message.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "1ea887ea-8de8-4cc1-9101-d912bd4816b0",
        "type": "string"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "destinationProcessId": {
        "description": "A reference to the processId of the destination.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "type": "string"
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "of",
    "required": [
      "destination",
      "source",
      "schemaRef",
      "messageId"
    ],
    "description": "Message schema",
    "collection": "log"
  },
  "of://process_instance.json": {
    "version": "0.1",
    "title": "Process Instance",
    "type": "object",
    "properties": {
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9b714fa-9f9f-4bd0-9500-3638ba2154e2",
        "type": "string",
        "description": "The object _id of the spawning parent process, an object id."
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9b714fa-9f9f-4bd0-9500-3638ba2154e2",
        "type": "string",
        "description": "The object _id of the process, an object id."
      },
      "spawnedWhen": {
        "format": "date-time",
        "description": "The time the process was spawned",
        "propertyId": "f509249d-409a-4b7c-8120-f8baefc71cb3",
        "type": "string"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      }
    },
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "of",
    "required": [
      "spawnedBy",
      "spawnedWhen",
      "schemaRef"
    ],
    "description": "Process instance schema",
    "collection": "process"
  },
  "bpm://message_bpm_process_command.json": {
    "properties": {
      "sourceProcessId": {
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "description": "A reference to the processId of the source.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "command": {
        "description": "The command.",
        "type": "string",
        "propertyId": "6478eee0-31c0-457d-93ca-f524833967a4",
        "enum": [
          "pause",
          "unpause",
          "stop",
          "kill"
        ]
      },
      "destination": {
        "description": "The destination adress",
        "propertyId": "484808c0-d8f2-4d58-973b-777e445b1ebd",
        "type": "string"
      },
      "source": {
        "description": "The source address",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "string"
      },
      "messageId": {
        "description": "An Id to help the sender identify a response",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "number"
      },
      "reason": {
        "description": "The reason for sending the command.",
        "propertyId": "787d9699-84ad-49c7-9295-d76fca8ec7c6",
        "type": "string"
      },
      "destinationProcessId": {
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "description": "A reference to the processId of the destination.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "userId": {
        "propertyId": "1ea887ea-8de8-4cc1-9101-d912bd4816b0",
        "description": "The user sending the message.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      }
    },
    "title": "BPM Process Command",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "bpm",
    "required": [
      "command"
    ],
    "description": "BPM Process Command message",
    "collection": "log"
  },
  "bpm://message_worker_process_command.json": {
    "properties": {
      "sourceProcessId": {
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "description": "A reference to the processId of the source.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "command": {
        "description": "The command.",
        "type": "string",
        "propertyId": "780acb41-20b3-4641-994a-c2354b062fe5",
        "enum": [
          "stop",
          "kill"
        ]
      },
      "destination": {
        "description": "The destination adress",
        "propertyId": "484808c0-d8f2-4d58-973b-777e445b1ebd",
        "type": "string"
      },
      "source": {
        "description": "The source address",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "string"
      },
      "messageId": {
        "description": "An Id to help the sender identify a response",
        "propertyId": "91711c7e-95a3-4d10-abbd-2446a1ba5e9a",
        "type": "number"
      },
      "reason": {
        "description": "The reason for sending the command.",
        "propertyId": "787d9699-84ad-49c7-9295-d76fca8ec7c6",
        "type": "string"
      },
      "destinationProcessId": {
        "propertyId": "5579b996-db01-4425-9479-b49a23a0306e",
        "description": "A reference to the processId of the destination.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "userId": {
        "propertyId": "1ea887ea-8de8-4cc1-9101-d912bd4816b0",
        "description": "The user sending the message.",
        "pattern": "^[a-fA-F0-9]{24}$",
        "type": "string"
      }
    },
    "title": "BPM Process Command",
    "schemaRef": "c1d71a36-2ac0-42fd-bca6-5cf0987a9f76",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "bpm",
    "required": [
      "name",
      "createdWhen",
      "schemaRef",
      "canRead",
      "canWrite",
      "command"
    ],
    "description": "BPM Process command message",
    "collection": "log"
  },
  "bpm://node_processes.json": {
    "properties": {
      "allowedChildTypes": {
        "description": "A list of the allowed types of children.",
        "items": {
          "format": "uri",
          "propertyId": "9161503f-a3fe-4b7e-8c0a-8553bd3f8043",
          "type": "string"
        },
        "type": "array"
      },
      "schemaRef": {
        "format": "uri",
        "description": "The schema ref of the node schema, a URI.",
        "propertyId": "e7b166f5-4bf0-4b8c-9a60-601030daa04b",
        "type": "string"
      },
      "name": {
        "description": "The friendly short name of the node.",
        "propertyId": "9ce4a360-53fe-4c02-b894-c5b1787cf835",
        "type": "string"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9487ec8-dfce-440a-a5d5-e65e89bc84aa",
        "type": "string",
        "description": "The objectId of the node."
      },
      "defaultFolder": {
        "description": "The default location for processes",
        "propertyId": "090c7655-7a9f-4be8-9ecd-00d210e7088d",
        "type": "string"
      },
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "aaf26d75-480a-4176-b4c6-ee544a325ac2",
        "refSchemaRef": "mbe://node.json",
        "type": "string",
        "description": "The parent objectId of the node. Empty if top node."
      },
      "canRead": {
        "description": "A list of the groups that can read the value of the node.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "5ede11e9-ccbe-425f-98ac-66d5136ed58b",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "createdWhen": {
        "format": "date-time",
        "description": "The time the node was created",
        "propertyId": "293137d2-a97f-482d-8e29-2917b32f5e67",
        "type": "string"
      },
      "description": {
        "description": "The descriptive text of the node.",
        "propertyId": "674286ab-55b8-4e3f-918f-8d3fd9593602",
        "type": "string"
      },
      "canWrite": {
        "description": "A list of the groups that can write to the node(and create/delete subnodes).",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "98286b6b-8cba-4086-8a71-2d754ac023b2",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      }
    },
    "title": "Processes",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "bpm",
    "required": [
      "name",
      "createdWhen",
      "schemaRef",
      "canRead",
      "canWrite"
    ],
    "description": "Processes",
    "collection": "node"
  },
  "bpm://node_agent.json": {
    "properties": {
      "repositoriesLocation": {
        "description": "The parent folder of all source repositories.",
        "type": "string"
      },
      "address": {
        "description": "The peer address.",
        "propertyId": "f8d3b4f5-e40c-438b-8088-8ccab7cae3c",
        "type": "string"
      },
      "allowedChildTypes": {
        "description": "A list of the allowed types of children.",
        "items": {
          "format": "uri",
          "propertyId": "9161503f-a3fe-4b7e-8c0a-8553bd3f8043",
          "type": "string"
        },
        "type": "array"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "numberOfWorkers": {
        "description": "The number of worker processes that is used to execute business processes, default is 3.",
        "type": "number"
      },
      "name": {
        "description": "The friendly short name of the node.",
        "propertyId": "9ce4a360-53fe-4c02-b894-c5b1787cf835",
        "type": "string"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9487ec8-dfce-440a-a5d5-e65e89bc84aa",
        "type": "string",
        "description": "The objectId of the node."
      },
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "aaf26d75-480a-4176-b4c6-ee544a325ac2",
        "refSchemaRef": "mbe://node.json",
        "type": "string",
        "description": "The parent objectId of the node. Empty if top node."
      },
      "canRead": {
        "description": "A list of the groups that can read the value of the node.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "5ede11e9-ccbe-425f-98ac-66d5136ed58b",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "peerType": {
        "description": "The peer type",
        "propertyId": "de5a8e20-5554-4746-a94b-7ab12c005b29",
        "enum": [
          "agent",
          "broker",
          "admin",
          "application"
        ]
      },
      "createdWhen": {
        "format": "date-time",
        "description": "The time the node was created",
        "propertyId": "293137d2-a97f-482d-8e29-2917b32f5e67",
        "type": "string"
      },
      "description": {
        "description": "The descriptive text of the node.",
        "propertyId": "674286ab-55b8-4e3f-918f-8d3fd9593602",
        "type": "string"
      },
      "canWrite": {
        "description": "A list of the groups that can write to the node(and create/delete subnodes).",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "98286b6b-8cba-4086-8a71-2d754ac023b2",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      }
    },
    "title": "Agent node",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "bpm",
    "required": [
      "name",
      "createdWhen",
      "schemaRef",
      "canRead",
      "canWrite",
      "address"
    ],
    "description": "An agent",
    "collection": "node"
  },
  "of://node_broker.json": {
    "properties": {
      "address": {
        "description": "The peer address.",
        "propertyId": "f8d3b4f5-e40c-438b-8088-8ccab7cae3c",
        "type": "string"
      },
      "allowedChildTypes": {
        "description": "A list of the allowed types of children.",
        "items": {
          "format": "uri",
          "propertyId": "9161503f-a3fe-4b7e-8c0a-8553bd3f8043",
          "type": "string"
        },
        "type": "array"
      },
      "schemaRef": {
        "format": "uri",
        "description": "A reference to the schema to which this data adheres.",
        "propertyId": "b1b75292-10d4-42be-a438-cd4f9835cc0a",
        "type": "string"
      },
      "name": {
        "description": "The friendly short name of the node.",
        "propertyId": "9ce4a360-53fe-4c02-b894-c5b1787cf835",
        "type": "string"
      },
      "_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "e9487ec8-dfce-440a-a5d5-e65e89bc84aa",
        "type": "string",
        "description": "The objectId of the node."
      },
      "repositories_location": {
        "description": "The parent folder of all source repositories.",
        "type": "string"
      },
      "parent_id": {
        "objectId": "true",
        "pattern": "^[a-fA-F0-9]{24}$",
        "propertyId": "aaf26d75-480a-4176-b4c6-ee544a325ac2",
        "refSchemaRef": "mbe://node.json",
        "type": "string",
        "description": "The parent objectId of the node. Empty if top node."
      },
      "canRead": {
        "description": "A list of the groups that can read the value of the node.",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "5ede11e9-ccbe-425f-98ac-66d5136ed58b",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      },
      "peerType": {
        "description": "The peer type",
        "propertyId": "de5a8e20-5554-4746-a94b-7ab12c005b29",
        "enum": [
          "agent",
          "broker",
          "admin",
          "application"
        ]
      },
      "createdWhen": {
        "format": "date-time",
        "description": "The time the node was created",
        "propertyId": "293137d2-a97f-482d-8e29-2917b32f5e67",
        "type": "string"
      },
      "description": {
        "description": "The descriptive text of the node.",
        "propertyId": "674286ab-55b8-4e3f-918f-8d3fd9593602",
        "type": "string"
      },
      "canWrite": {
        "description": "A list of the groups that can write to the node(and create/delete subnodes).",
        "items": {
          "objectId": "true",
          "pattern": "^[a-fA-F0-9]{24}$",
          "propertyId": "98286b6b-8cba-4086-8a71-2d754ac023b2",
          "refSchemaRef": "mbe://group.json",
          "type": "string"
        },
        "minItems": 1,
        "type": "array"
      }
    },
    "title": "Broker node",
    "type": "object",
    "version": "0.1",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "namespace": "of",
    "required": [
      "name",
      "createdWhen",
      "schemaRef",
      "canRead",
      "canWrite",
      "address"
    ],
    "description": "A Broker",
    "collection": "node"
  }
}